<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.somebody.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.somebody.po.Orders" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="buyTime" property="buyTime" jdbcType="TIMESTAMP" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="deadline" property="deadline" jdbcType="TIMESTAMP" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="packageID" property="packageID" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, price, buyTime, duration, deadline, userName, packageID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.somebody.po.Orders" >
    insert into orders (id, price, buyTime, 
      duration, deadline, userName, 
      packageID)
    values (#{id,jdbcType=BIGINT}, #{price,jdbcType=INTEGER}, #{buyTime,jdbcType=TIMESTAMP}, 
      #{duration,jdbcType=INTEGER}, #{deadline,jdbcType=TIMESTAMP}, #{userName,jdbcType=VARCHAR}, 
      #{packageID,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.somebody.po.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="buyTime != null" >
        buyTime,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="packageID != null" >
        packageID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null" >
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="packageID != null" >
        #{packageID,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.somebody.po.Orders" >
    update orders
    <set >
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null" >
        buyTime = #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="packageID != null" >
        packageID = #{packageID,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.somebody.po.Orders" >
    update orders
    set price = #{price,jdbcType=INTEGER},
      buyTime = #{buyTime,jdbcType=TIMESTAMP},
      duration = #{duration,jdbcType=INTEGER},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      userName = #{userName,jdbcType=VARCHAR},
      packageID = #{packageID,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="isBuy" parameterType="com.somebody.po.Orders" resultType="java.lang.Integer">
  	select count(*) from orders where username = #{userName} and packageid = #{packageID}
  </select>
  
  <select id="selectDeadlineByUserNameAndPackageID" parameterType="com.somebody.po.Orders" resultType="java.util.Date">
  	select deadline from orders where username = #{userName} and packageid = #{packageID}
  </select>
  
  <select id="list" resultType="com.somebody.po.Orders">
  	select <include refid="Base_Column_List" /> from orders 
  </select>
  
  <select id="count" parameterType="com.somebody.vo.OrdersQueryCondition" resultType = "java.lang.Integer">
  	select count(*) from orders as o join package as p on o.packageid = p.id
  	<where>
 	 		<if test="packageID != null and packageID != 0">
 	 			p.id = #{packageID}
 	 		</if>
 	 		<if test="beginTime != null">
 	 			 <![CDATA[AND  o.buytime>#{beginTime}  ]]> 
 	 		</if>
 	 		<if test="endTime != null">
 	 			  <![CDATA[AND o.buytime < #{endTime} ]]> 
 	 		</if>
 	 		
 	 	</where>
  </select>
  
  <select id="query"  parameterType="com.somebody.vo.OrdersQueryCondition" resultType="com.somebody.vo.Orders">
 	 select o.id as 'id' , o.price as 'price' , o.buyTime as 'buyTime', o.duration as 'duration', o.deadline as 'deadline', o.userName as 'userName', p.name as 'packageName'
 	 	from orders as o join package as p on o.packageid=p.id 
 	 	<where>
 	 		<if test="packageID != null and packageID != 0">
 	 			p.id = #{packageID}
 	 		</if>
 	 		<if test="beginTime != null">
 	 			  <![CDATA[ AND o.buytime > #{beginTime}  ]]> 
 	 		</if>
 	 		<if test="endTime != null">
 	 			  <![CDATA[ AND o.buytime < #{endTime} ]]> 
 	 		</if>
 	 	</where>
  		limit ${(page-1)*10} , 10
  </select>
 
</mapper>