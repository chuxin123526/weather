<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.somebody.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.somebody.po.User">
		<id column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="isEnterpriseUser" property="isEnterpriseUser"
			jdbcType="CHAR" />
		<result column="registerTime" property="registerTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		name, password, isEnterpriseUser, registerTime
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user
		where name = #{name,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from user
		where name = #{name,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.somebody.po.User">
		insert into user (name, password, isEnterpriseUser,
		registerTime)
		values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{isEnterpriseUser,jdbcType=CHAR},
		#{registerTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.somebody.po.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="isEnterpriseUser != null">
				isEnterpriseUser,
			</if>
			<if test="registerTime != null">
				registerTime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="isEnterpriseUser != null">
				#{isEnterpriseUser,jdbcType=CHAR},
			</if>
			<if test="registerTime != null">
				#{registerTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.somebody.po.User">
		update user
		<set>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="isEnterpriseUser != null">
				isEnterpriseUser = #{isEnterpriseUser,jdbcType=CHAR},
			</if>
			<if test="registerTime != null">
				registerTime = #{registerTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where name = #{name,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.somebody.po.User">
		update user
		set password = #{password,jdbcType=VARCHAR},
		isEnterpriseUser = #{isEnterpriseUser,jdbcType=CHAR},
		registerTime = #{registerTime,jdbcType=TIMESTAMP}
		where name = #{name,jdbcType=VARCHAR}
	</update>

	<select id="selectRegisterByUserName" parameterType="java.lang.String"
		resultType="java.util.Date">
		select registerTime from user where name = #{userName}
	</select>

	<select id="selectCountByUserName" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*) from user where name = #{userName}
	</select>

	<select id="selectByUserNameAndPassword" parameterType="com.somebody.po.User"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user where name = #{name} and password = #{password}
	</select>

	<select id="list" resultType="com.somebody.po.User">
		select name , isenterpriseuser , registertime from user
	</select>

	<select id="query" resultType="com.somebody.po.User" parameterType="com.somebody.vo.UserQueryCondition">
		select name , isenterpriseuser , registertime from user
		<where>
			<if test="keyword != null and keyword != ''">
				name like #{keyword}
			</if>
			<if test="isEnterpriseUser != 2 and isEnterpriseUser != null and isEnterpriseUser != ''">
				AND isenterpriseUser = #{isEnterpriseUser}
			</if>
		</where>
		 limit ${(page-1)*10},10
	</select>
	
	<select id="count" resultType="java.lang.Integer">
		select count(*) from user
		<where>
			<if test="keyword != null and keyword != ''">
				name like #{keyword}
			</if>
			<if test="isEnterpriseUser != 2 and isEnterpriseUser != null and isEnterpriseUser != ''">
				AND isenterpriseUser = #{isEnterpriseUser}
			</if>
		</where>
	</select>
	
</mapper>